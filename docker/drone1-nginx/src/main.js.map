{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/dashboard/dashboard.component.css","webpack:///./src/app/dashboard/dashboard.component.html","webpack:///./src/app/dashboard/dashboard.component.ts","webpack:///./src/app/data.service.ts","webpack:///./src/app/drone-simulator/model/drawable.js","webpack:///./src/app/drone-simulator/model/drone.js","webpack:///./src/app/drone-simulator/model/flightpath.js","webpack:///./src/app/drone-simulator/model/grid.js","webpack:///./src/app/drone-simulator/model/image.js","webpack:///./src/app/drone-simulator/model/map.js","webpack:///./src/app/drone-simulator/model/product.js","webpack:///./src/app/drone-simulator/model/tile.js","webpack:///./src/app/drone-simulator/presenter/drone-simulator.service.ts","webpack:///./src/app/drone-simulator/utils/imageloader.js","webpack:///./src/app/drone-simulator/view/drone-simulator.component.css","webpack:///./src/app/drone-simulator/view/drone-simulator.component.html","webpack:///./src/app/drone-simulator/view/drone-simulator.component.ts","webpack:///./src/app/flight-planner/flight-planner.component.css","webpack:///./src/app/flight-planner/flight-planner.component.html","webpack:///./src/app/flight-planner/flight-planner.component.ts","webpack:///./src/app/http.service.ts","webpack:///./src/app/inventory/inventory.component.css","webpack:///./src/app/inventory/inventory.component.html","webpack:///./src/app/inventory/inventory.component.ts","webpack:///./src/app/map-editor/map-editor.component.css","webpack:///./src/app/map-editor/map-editor.component.html","webpack:///./src/app/map-editor/map-editor.component.ts","webpack:///./src/app/shared.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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ACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAG0B,+DAAU;OAFzB,WAAW,CAQvB;IAAD,kBAAC;CAAA;AARuB;;;;;;;;;;;;;ACNxB;AAAA;AAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACnBA;AAAA;AAAA;AAAyC;;AAElC,oBAAoB,uDAAa;AACxC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACnEA;AAAA;AAAA;AAA4B;;AAErB;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,uBAAuB,0CAAI;AAC3B;AACA;AACA;;AAEA;AACA,2CAA2C,QAAQ;AACnD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,wBAAwB;AAC3C,qBAAqB,0CAAI;AACzB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE,6BAA6B;AAC/F;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACnDA;AAAA;AAAA;AAA+B;;AAExB;AACP;AACA;AACA;AACA,mBAAmB,oBAAoB;AACvC,qBAAqB,qBAAqB;AAC1C,+BAA+B,6CAAI;AACnC;AACA;AACA;;AAEA;AACA,mBAAmB,yBAAyB;AAC5C,qBAAqB,0BAA0B;AAC/C;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACpBA;AAAA;AAAA;AAAuC;;AAEhC,4BAA4B,qDAAQ;AAC3C;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;ACfA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+B;AACY;AACN;AACT;;AAErB;;AAEP;AACA;AACA;AACA;AACA;AACA,oBAAoB,6CAAI;AACxB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,0BAA0B,yDAAU,0BAA0B,WAAW,GAAG,WAAW;AACvF;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,eAAe;AACrE;AACA;AACA;AACA,mBAAmB;AACnB,OAAO;AACP;AACA;AACA;;AAEA;AACA,gBAAgB,mDAAO;AACvB;AACA;AACA;AACA;;AAEA;AACA,0CAA0C,QAAQ;AAClD;AACA;AACA;AACA;AACA;;AAEA;AACA,4BAA4B,0CAAI;AAChC;;AAEA;AACA,2CAA2C,QAAQ;AACnD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;;;;;;;;;;;;;AC/HA;AAAA;AAAA;AAAyC;;AAElC,sBAAsB,uDAAa;AAC1C;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACRA;AAAA;AAAA;AAAuC;;AAEhC,mBAAmB,qDAAQ;AAClC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;ACb+D;AAC9B;AACI;AACU;AACA;AACE;AAKjD;IAwBE,+BAAoB,IAAiB,EAAU,IAAiB;QAAhE,iBAWC;QAXmB,SAAI,GAAJ,IAAI,CAAa;QAAU,SAAI,GAAJ,IAAI,CAAa;QAvBhE,aAAQ,GAAG,EAAE,CAAC;QACd,gBAAW,GAAG,CAAC,CAAC;QAChB,qBAAgB,GAAG,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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import {NgModule} from '@angular/core';\r\nimport {Routes, RouterModule} from '@angular/router';\r\nimport {DashboardComponent} from './dashboard/dashboard.component';\r\nimport {FlightPlannerComponent} from './flight-planner/flight-planner.component';\r\nimport {InventoryComponent} from './inventory/inventory.component';\r\nimport {MapEditorComponent} from './map-editor/map-editor.component';\r\n\r\nconst routes: Routes = [\r\n  {path: '', component: DashboardComponent},\r\n  {path: 'drone-simulator', component: DashboardComponent},\r\n  {path: 'flight-planner', component: FlightPlannerComponent},\r\n  {path: 'map-editor', component: MapEditorComponent},\r\n  {path: 'inventory', component: InventoryComponent}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule {\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<nav class=\\\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\\\">\\r\\n  <a class=\\\"navbar-brand col-sm-3 col-md-2 mr-0\\\" href=\\\"/\\\">{{title}}</a>\\r\\n</nav>\\r\\n<div class=\\\"container-fluid\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <nav class=\\\"col-md-2 d-none d-md-block bg-light sidebar\\\">\\r\\n      <div class=\\\"sidebar-sticky\\\">\\r\\n        <ul class=\\\"nav flex-column\\\">\\r\\n          <li class=\\\"nav-item\\\">\\r\\n            <a class=\\\"nav-link\\\" routerLink=\\\"/\\\" [ngClass]=\\\"{ 'active':activeTab==='dashboard'}\\\">\\r\\n              <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"24\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\" fill=\\\"none\\\" stroke=\\\"currentColor\\\" stroke-width=\\\"2\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" class=\\\"feather feather-sliders\\\"><line x1=\\\"4\\\" y1=\\\"21\\\" x2=\\\"4\\\" y2=\\\"14\\\"></line><line x1=\\\"4\\\" y1=\\\"10\\\" x2=\\\"4\\\" y2=\\\"3\\\"></line><line x1=\\\"12\\\" y1=\\\"21\\\" x2=\\\"12\\\" y2=\\\"12\\\"></line><line x1=\\\"12\\\" y1=\\\"8\\\" x2=\\\"12\\\" y2=\\\"3\\\"></line><line x1=\\\"20\\\" y1=\\\"21\\\" x2=\\\"20\\\" y2=\\\"16\\\"></line><line x1=\\\"20\\\" y1=\\\"12\\\" x2=\\\"20\\\" y2=\\\"3\\\"></line><line x1=\\\"1\\\" y1=\\\"14\\\" x2=\\\"7\\\" y2=\\\"14\\\"></line><line x1=\\\"9\\\" y1=\\\"8\\\" x2=\\\"15\\\" y2=\\\"8\\\"></line><line x1=\\\"17\\\" y1=\\\"16\\\" x2=\\\"23\\\" y2=\\\"16\\\"></line></svg>\\r\\n              Dashboard\\r\\n            </a>\\r\\n          </li>\\r\\n          <li class=\\\"nav-item\\\">\\r\\n            <a class=\\\"nav-link\\\" routerLink=\\\"/flight-planner\\\" [ngClass]=\\\"{ 'active':activeTab==='flight-planner'}\\\">\\r\\n              <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"24\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\" fill=\\\"none\\\" stroke=\\\"currentColor\\\" stroke-width=\\\"2\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" class=\\\"feather feather-compass\\\"><circle cx=\\\"12\\\" cy=\\\"12\\\" r=\\\"10\\\"/><polygon points=\\\"16.24 7.76 14.12 14.12 7.76 16.24 9.88 9.88 16.24 7.76\\\"/></svg>\\r\\n              Flight Planner\\r\\n            </a>\\r\\n          </li>\\r\\n          <li class=\\\"nav-item\\\">\\r\\n            <a class=\\\"nav-link\\\" routerLink=\\\"/inventory\\\" [ngClass]=\\\"{ 'active':activeTab==='inventory'}\\\">\\r\\n              <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"24\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\" fill=\\\"none\\\" stroke=\\\"currentColor\\\" stroke-width=\\\"2\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" class=\\\"feather feather-package\\\"><path d=\\\"M12.89 1.45l8 4A2 2 0 0 1 22 7.24v9.53a2 2 0 0 1-1.11 1.79l-8 4a2 2 0 0 1-1.79 0l-8-4a2 2 0 0 1-1.1-1.8V7.24a2 2 0 0 1 1.11-1.79l8-4a2 2 0 0 1 1.78 0z\\\"/><polyline points=\\\"2.32 6.16 12 11 21.68 6.16\\\"/><line x1=\\\"12\\\" y1=\\\"22.76\\\" x2=\\\"12\\\" y2=\\\"11\\\"/><line x1=\\\"7\\\" y1=\\\"3.5\\\" x2=\\\"17\\\" y2=\\\"8.5\\\"/></svg>\\r\\n              Inventory\\r\\n            </a>\\r\\n          </li>\\r\\n        </ul>\\r\\n        <h6 class=\\\"sidebar-heading d-flex justify-content-between align-items-center px-3 mt-4 mb-1 text-muted\\\">\\r\\n          <span>Flight Paths</span>\\r\\n          <a class=\\\"d-flex align-items-center text-muted\\\" href=\\\"#\\\">\\r\\n            <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"24\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\" fill=\\\"none\\\" stroke=\\\"currentColor\\\" stroke-width=\\\"2\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" class=\\\"feather feather-plus-circle\\\"><circle cx=\\\"12\\\" cy=\\\"12\\\" r=\\\"10\\\"></circle><line x1=\\\"12\\\" y1=\\\"8\\\" x2=\\\"12\\\" y2=\\\"16\\\"></line><line x1=\\\"8\\\" y1=\\\"12\\\" x2=\\\"16\\\" y2=\\\"12\\\"></line></svg>\\r\\n          </a>\\r\\n        </h6>\\r\\n        <ul class=\\\"nav flex-column mb-2\\\">\\r\\n          <li class=\\\"nav-item\\\">\\r\\n            <a class=\\\"nav-link\\\" href=\\\"#\\\">\\r\\n              <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"24\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\" fill=\\\"none\\\" stroke=\\\"currentColor\\\" stroke-width=\\\"2\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" class=\\\"feather feather-navigation\\\"><polygon points=\\\"3 11 22 2 13 21 11 13 3 11\\\"/></svg>\\r\\n              Test Flight 1\\r\\n            </a>\\r\\n          </li>\\r\\n          <li class=\\\"nav-item\\\">\\r\\n            <a class=\\\"nav-link\\\" href=\\\"#\\\">\\r\\n              <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"24\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\" fill=\\\"none\\\" stroke=\\\"currentColor\\\" stroke-width=\\\"2\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" class=\\\"feather feather-navigation\\\"><polygon points=\\\"3 11 22 2 13 21 11 13 3 11\\\"/></svg>\\r\\n              Test Flight 2\\r\\n            </a>\\r\\n          </li>\\r\\n        </ul>\\r\\n      </div>\\r\\n    </nav>\\r\\n    <main role=\\\"main\\\" class=\\\"col-md-9 ml-sm-auto col-lg-10 px-4\\\">\\r\\n        <router-outlet></router-outlet>\\r\\n    </main>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import {Component} from '@angular/core';\r\nimport {SharedService} from './shared.service';\r\nimport {DroneSimulatorService} from './drone-simulator/presenter/drone-simulator.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'Drone Control Center';\r\n  activeTab;\r\n\r\n  constructor(private service: SharedService, private simulator: DroneSimulatorService) {\r\n    this.simulator.load()\r\n      .then(() => {\r\n        simulator.onSimulatorLoadedEvent.emit(true);\r\n      });\r\n    service.onNavigateEvent.subscribe(\r\n      (activeTab) => {\r\n        this.activeTab = activeTab;\r\n      }\r\n    );\r\n  }\r\n}\r\n","import {BrowserModule} from '@angular/platform-browser';\r\nimport {NgModule} from '@angular/core';\r\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\r\nimport {FormsModule} from '@angular/forms';\r\nimport {HttpClientModule} from '@angular/common/http';\r\n\r\nimport {AppComponent} from './app.component';\r\nimport {AppRoutingModule} from './app-routing.module';\r\nimport {DashboardComponent} from './dashboard/dashboard.component';\r\nimport {DroneSimulatorComponent} from './drone-simulator/view/drone-simulator.component';\r\nimport {FlightPlannerComponent} from './flight-planner/flight-planner.component';\r\nimport {MapEditorComponent} from './map-editor/map-editor.component';\r\nimport {InventoryComponent} from './inventory/inventory.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    DashboardComponent,\r\n    DroneSimulatorComponent,\r\n    FlightPlannerComponent,\r\n    MapEditorComponent,\r\n    InventoryComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    NgbModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    HttpClientModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {\r\n}\r\n","module.exports = \".controls {\\r\\n  borderleft: 1px dashed #333;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZGFzaGJvYXJkL2Rhc2hib2FyZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsMkJBQTJCO0FBQzdCIiwiZmlsZSI6InNyYy9hcHAvZGFzaGJvYXJkL2Rhc2hib2FyZC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNvbnRyb2xzIHtcclxuICBib3JkZXJsZWZ0OiAxcHggZGFzaGVkICMzMzM7XHJcbn1cclxuIl19 */\"","module.exports = \"<div class=\\\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom\\\">\\r\\n  <h1>Dashboard</h1>\\r\\n</div>\\r\\n<div class=\\\"row\\\">\\r\\n  <main class=\\\"col-md\\\">\\r\\n    <app-drone-simulator></app-drone-simulator>\\r\\n  </main>\\r\\n  <aside *ngIf=\\\"simulator.initialized\\\" class=\\\"col-md controls\\\">\\r\\n    <h2>Drone Controls</h2>\\r\\n    <hr>\\r\\n    <div class=\\\"card-deck\\\">\\r\\n      <div class=\\\"card bg-light mb-3\\\" style=\\\"max-width: 540px;\\\">\\r\\n        <div class=\\\"card-header\\\"></div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <h5 class=\\\"card-title\\\">Drone Information</h5>\\r\\n          <p class=\\\"card-text\\\">\\r\\n            <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"24\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\" fill=\\\"none\\\"\\r\\n                 stroke=\\\"currentColor\\\" stroke-width=\\\"2\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\"\\r\\n                 class=\\\"feather feather-battery-charging\\\">\\r\\n              <path d=\\\"M5 18H3a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h3.19M15 6h2a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2h-3.19\\\"></path>\\r\\n              <line x1=\\\"23\\\" y1=\\\"13\\\" x2=\\\"23\\\" y2=\\\"11\\\"></line>\\r\\n              <polyline points=\\\"11 6 7 12 13 12 9 18\\\"></polyline>\\r\\n            </svg>\\r\\n            Battery: 100%\\r\\n          </p>\\r\\n          <p class=\\\"card-text\\\">\\r\\n            <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"24\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\" fill=\\\"none\\\"\\r\\n                 stroke=\\\"currentColor\\\" stroke-width=\\\"2\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\"\\r\\n                 class=\\\"feather feather-map-pin\\\">\\r\\n              <path d=\\\"M21 10c0 7-9 13-9 13s-9-6-9-13a9 9 0 0 1 18 0z\\\"></path>\\r\\n              <circle cx=\\\"12\\\" cy=\\\"10\\\" r=\\\"3\\\"></circle>\\r\\n            </svg>\\r\\n            Position: [{{simulator.drone.x}}, {{simulator.drone.y}}]\\r\\n          </p>\\r\\n          <p class=\\\"card-text\\\">\\r\\n            <small class=\\\"text-muted\\\">Last updated 1 second ago</small>\\r\\n          </p>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"card bg-light mb-3\\\" style=\\\"max-width: 540px;\\\">\\r\\n        <div class=\\\"card-header\\\"></div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n          <h5 class=\\\"card-title\\\">Map Editing</h5>\\r\\n          <div class=\\\"card-text\\\">\\r\\n            Select drawable:\\r\\n          </div>\\r\\n          <div class=\\\"btn-group\\\" ngbDropdown role=\\\"group\\\" aria-label=\\\"map-selection\\\">\\r\\n            <button *ngIf=\\\"simulator.loaded\\\" type=\\\"button\\\" class=\\\"btn btn-sm btn-outline-secondary dropdown-toggle\\\"\\r\\n                    ngbDropdownToggle>\\r\\n              <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"24\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\" fill=\\\"none\\\"\\r\\n                   stroke=\\\"currentColor\\\" stroke-width=\\\"2\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\"\\r\\n                   class=\\\"feather feather-codepen\\\">\\r\\n                <polygon points=\\\"12 2 22 8.5 22 15.5 12 22 2 15.5 2 8.5 12 2\\\"></polygon>\\r\\n                <line x1=\\\"12\\\" y1=\\\"22\\\" x2=\\\"12\\\" y2=\\\"15.5\\\"></line>\\r\\n                <polyline points=\\\"22 8.5 12 15.5 2 8.5\\\"></polyline>\\r\\n                <polyline points=\\\"2 15.5 12 8.5 22 15.5\\\"></polyline>\\r\\n                <line x1=\\\"12\\\" y1=\\\"2\\\" x2=\\\"12\\\" y2=\\\"8.5\\\"></line>\\r\\n              </svg>\\r\\n              {{simulator.selectedDrawable}}\\r\\n            </button>\\r\\n            <div class=\\\"dropdown-menu\\\" ngbDropdownMenu>\\r\\n              <button type=\\\"button\\\" class=\\\"dropdown-item\\\" (click)=\\\"simulator.selectDrawable('waypoint')\\\">\\r\\n                Waypoints\\r\\n              </button>\\r\\n              <button type=\\\"button\\\" class=\\\"dropdown-item\\\" (click)=\\\"simulator.selectDrawable('obstacle')\\\">\\r\\n                Obstacles\\r\\n              </button>\\r\\n              <button type=\\\"button\\\" class=\\\"dropdown-item\\\" (click)=\\\"simulator.selectDrawable('product')\\\">\\r\\n                Products\\r\\n              </button>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"card-text\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-sm btn-outline-secondary\\\" (click)=\\\"simulator.duplicateMap()\\\">\\r\\n              <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"24\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\" fill=\\\"none\\\"\\r\\n                   stroke=\\\"currentColor\\\" stroke-width=\\\"2\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\"\\r\\n                   class=\\\"feather feather-download\\\">\\r\\n                <path d=\\\"M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4\\\"></path>\\r\\n                <polyline points=\\\"7 10 12 15 17 10\\\"></polyline>\\r\\n                <line x1=\\\"12\\\" y1=\\\"15\\\" x2=\\\"12\\\" y2=\\\"3\\\"></line>\\r\\n              </svg>\\r\\n              Export Map\\r\\n            </button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </aside>\\r\\n</div>\\r\\n<hr>\\r\\n\"","import {Component, OnInit} from '@angular/core';\r\nimport {SharedService} from '../shared.service';\r\nimport {DroneSimulatorService} from '../drone-simulator/presenter/drone-simulator.service';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.css']\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n\r\n  constructor(private sharedService: SharedService, private simulator: DroneSimulatorService) {\r\n    sharedService.onNavigateEvent.emit('dashboard');\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DataService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  getNewMap(): Promise<any> {\r\n    return this.http.get<any>('../assets/data/new_map.json').toPromise();\r\n  }\r\n}\r\n","export class Drawable {\r\n  constructor(x, y, tileSize) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.tileSize = tileSize;\r\n  }\r\n\r\n  draw(context) {\r\n    throw new Error('Abstract method not implemented here.');\r\n  }\r\n\r\n  intersects(other) {\r\n    return !(\r\n      this.x + 1 <= other.x ||\r\n      this.y + 1 <= other.y ||\r\n      this.x >= other.x + 1 ||\r\n      this.y >= other.y + 1\r\n    );\r\n  }\r\n}\r\n","import {DrawableImage} from './image.js';\r\n\r\nexport class Drone extends DrawableImage {\r\n  constructor(x, y, tileSize, gridSize, imageLoader) {\r\n    super(x, y, tileSize, imageLoader.loadedImages['drone']);\r\n    this.gridSize = gridSize;\r\n    this.dx = 0;\r\n    this.dy = 0;\r\n  }\r\n\r\n  draw(context) {\r\n    context.drawImage(this.loadedImage, this.x * this.tileSize - (this.tileSize / 2), this.y * this.tileSize - (this.tileSize / 2), this.tileSize * 2, this.tileSize * 2);\r\n  }\r\n\r\n  fly(flightpath) {\r\n    // TODO\r\n  }\r\n\r\n  move(direction) {\r\n    switch (direction) {\r\n      case 'north':\r\n        if (this.y < this.gridSize.height - 1) {\r\n          this.dx = 0;\r\n          this.dy = 1;\r\n          this.flyDiff();\r\n        }\r\n        break;\r\n      case 'south':\r\n        if (this.y > 0) {\r\n          this.dx = 0;\r\n          this.dy = -1;\r\n          this.flyDiff();\r\n        }\r\n        break;\r\n      case 'east':\r\n        if (this.x < this.gridSize.width - 1) {\r\n          this.dx = 1;\r\n          this.dy = 0;\r\n          this.flyDiff();\r\n        }\r\n        break;\r\n      case 'west':\r\n        if (this.x > 0) {\r\n          this.dx = -1;\r\n          this.dy = 0;\r\n          this.flyDiff();\r\n        }\r\n        break;\r\n    }\r\n  }\r\n\r\n  moveTo(x, y) {\r\n    if (x > 0 && y > 0 && y < this.gridSize.height - 1 && x < this.gridSize.width - 1) {\r\n      this.x = x;\r\n      this.y = y;\r\n    }\r\n  }\r\n\r\n  flyDiff() {\r\n    this.x += this.dx;\r\n    this.y += this.dy;\r\n  }\r\n\r\n  reset() {\r\n    this.x = 1;\r\n    this.y = 1;\r\n  }\r\n}\r\n","import {Tile} from \"./tile\";\r\n\r\nexport class FlightPath {\r\n  constructor(tileSize, mapId, takeoff, landing) {\r\n    this.mapId = mapId;\r\n    this.tileSize = tileSize;\r\n    this.waypoints = [];\r\n    this.optimalPath = [];\r\n    this.takeoff = takeoff;\r\n    this.landing = landing;\r\n  }\r\n\r\n  addWaypoint(x, y) {\r\n    let waypoint = new Tile(x, y, this.tileSize, '#699868');\r\n    this.waypoints.push(waypoint);\r\n    console.log('Waypoint added: [X: ' + x + ', Y: ' + y + ']');\r\n  }\r\n\r\n  removeWaypoint(x, y) {\r\n    for (let i = this.waypoints.length - 1; i >= 0; i--) {\r\n      if (this.waypoints[i].x === x && this.waypoints[i].y === y) {\r\n        this.waypoints.splice(i, 1);\r\n      }\r\n    }\r\n    console.log('Waypoint removed: [X: ' + x + ', Y: ' + y + ']');\r\n  }\r\n\r\n  setOptimalPath(optimalPath) {\r\n    this.optimalPath = [];\r\n    for (let i = 0; i < optimalPath.length; i++) {\r\n      let tile = new Tile(optimalPath[i].x, optimalPath[i].y, this.tileSize, '#4286f4');\r\n      this.optimalPath[i] = tile;\r\n    }\r\n  }\r\n\r\n  toJSON() {\r\n    let flightpath = {\r\n      mapId: 0,\r\n      waypoints: []\r\n    };\r\n    flightpath.mapId = this.mapId;\r\n    flightpath.waypoints.push(this.takeoff);\r\n    this.waypoints.forEach(waypoint => flightpath.waypoints.push({x: waypoint.x, y: waypoint.y}));\r\n    flightpath.waypoints.push(this.landing);\r\n    return flightpath;\r\n  }\r\n\r\n  draw(context) {\r\n    this.optimalPath.forEach((t) => t.draw(context));\r\n    this.waypoints.forEach((w) => w.draw(context));\r\n  }\r\n}\r\n","import {Tile} from './tile.js';\r\n\r\nexport class Grid {\r\n  constructor(gridSize, tileSize) {\r\n    this.gridSize = gridSize;\r\n    this.tiles = [...Array(gridSize.width)].map(() => Array(gridSize.height));\r\n    for (let x = 0; x < gridSize.width; x++) {\r\n      for (let y = 0; y < gridSize.height; y++) {\r\n        this.tiles[x][y] = new Tile(x, y, tileSize);\r\n      }\r\n    }\r\n  }\r\n\r\n  draw(context) {\r\n    for (let x = 0; x < this.gridSize.width; x++) {\r\n      for (let y = 0; y < this.gridSize.height; y++) {\r\n        this.tiles[x][y].draw(context);\r\n      }\r\n    }\r\n  }\r\n}\r\n","import {Drawable} from './drawable.js';\r\n\r\nexport class DrawableImage extends Drawable {\r\n  constructor(x, y, tileSize, loadedImage) {\r\n    super(x, y, tileSize);\r\n    this.loadedImage = loadedImage;\r\n  }\r\n\r\n  draw(context) {\r\n      context.drawImage(this.loadedImage, this.x * this.tileSize, this.y * this.tileSize, this.tileSize, this.tileSize);\r\n  }\r\n\r\n  intersects(other) {\r\n    return this.intersects(other);\r\n  }\r\n}\r\n","import {Grid} from './grid.js';\r\nimport {FlightPath} from \"./flightpath.js\";\r\nimport {Product} from \"./product.js\";\r\nimport {Tile} from \"./tile\";\r\n\r\nexport class Map {\r\n\r\n  constructor(gridSize, tileSize, imageLoader) {\r\n    this.name = '';\r\n    this.id = 0;\r\n    this.gridSize = gridSize;\r\n    this.tileSize = tileSize;\r\n    this.grid = new Grid(gridSize, tileSize);\r\n    this.obstacles = [];\r\n    this.products = [];\r\n    this.flightpath = undefined;\r\n    this.imageLoader = imageLoader;\r\n  }\r\n\r\n  reset() {\r\n    this.id = 0;\r\n    this.name = '';\r\n    this.flightpath = undefined;\r\n    this.obstacles = [];\r\n    this.products = [];\r\n  }\r\n\r\n  loadMap(map) {\r\n    this.id = map._id;\r\n    this.name = map.name;\r\n    this.flightpath = new FlightPath(this.tileSize, this.id, {x: 1, y: 1}, {x: 1, y: 1});\r\n    map.obstacles.forEach(o => this.addObstacle(o.x, o.y));\r\n    map.products.forEach(p => this.addProduct(p.name, p.quantity, p.position.x, p.position.y));\r\n  }\r\n\r\n  toJSON(name) {\r\n    let map = {\r\n      _id: this.id,\r\n      sizeX: this.gridSize.width,\r\n      sizeY: this.gridSize.height,\r\n      name: name,\r\n      obstacles: [],\r\n      products: []\r\n    };\r\n    this.obstacles.forEach((o) => map.obstacles.push({x: o.x, y: o.y}));\r\n    this.products.forEach((p) => map.products.push({\r\n        name: p.name,\r\n        quantity: p.quantity,\r\n        position: {x: p.x, y: p.y}\r\n      })\r\n    );\r\n    return map;\r\n  }\r\n\r\n  addProduct(name, quantity, x, y) {\r\n    let p = new Product(x, y, this.tileSize, this.imageLoader.loadedImages['box']);\r\n    p.name = name;\r\n    p.quantity = quantity;\r\n    this.products.push(p);\r\n  }\r\n\r\n  removeProduct(x, y) {\r\n    for (let i = this.products.length - 1; i >= 0; i--) {\r\n      if (this.products[i].x === x && this.products[i].y === y) {\r\n        this.products.splice(i, 1);\r\n      }\r\n    }\r\n  }\r\n\r\n  addObstacle(x, y) {\r\n    this.obstacles.push(new Tile(x, y, this.tileSize, '#a80a0a'));\r\n  }\r\n\r\n  removeObstacle(x, y) {\r\n    for (let i = this.obstacles.length - 1; i >= 0; i--) {\r\n      if (this.obstacles[i].x === x && this.obstacles[i].y === y) {\r\n        this.obstacles.splice(i, 1);\r\n      }\r\n    }\r\n  }\r\n\r\n  toggleWaypoint(x, y) {\r\n    if (this.contains('product', x, y)) {\r\n      if (!this.contains('waypoint', x, y)) {\r\n        this.flightpath.addWaypoint(x, y);\r\n      } else {\r\n        this.flightpath.removeWaypoint(x, y);\r\n      }\r\n    }\r\n  }\r\n\r\n  toggleObstacle(x, y) {\r\n    if (!this.contains('product', x, y)) {\r\n      if (!this.contains('obstacle', x, y)) {\r\n        this.addObstacle(x, y);\r\n      } else {\r\n        this.removeObstacle(x, y);\r\n      }\r\n    }\r\n  }\r\n\r\n  toggleProduct(x, y) {\r\n    if (!this.contains('obstacle', x, y)) {\r\n      if (!this.contains('product', x, y)) {\r\n        this.addProduct('Manually added', 1, x, y);\r\n      } else {\r\n        this.removeProduct(x, y);\r\n      }\r\n    }\r\n  }\r\n\r\n  draw(context) {\r\n    this.grid.draw(context);\r\n    this.flightpath.draw(context);\r\n    this.obstacles.forEach((o) => o.draw(context));\r\n    this.products.forEach((i) => i.draw(context));\r\n  }\r\n\r\n  contains(type, x, y) {\r\n    if (type === 'obstacle') {\r\n      return this.obstacles.some(obstacle => obstacle.x === x && obstacle.y === y);\r\n    } else if (type === 'product') {\r\n      return this.products.some(item => item.x === x && item.y === y);\r\n    } else if (type === 'waypoint') {\r\n      return this.flightpath.waypoints.some(waypoint => waypoint.x === x && waypoint.y === y);\r\n    }\r\n  }\r\n}\r\n","import {DrawableImage} from './image.js';\r\n\r\nexport class Product extends DrawableImage {\r\n  constructor(x, y, tileSize, loadedImage) {\r\n    super(x, y, tileSize, loadedImage);\r\n    this.name = '';\r\n    this.quantity = 0;\r\n  }\r\n}\r\n","import {Drawable} from './drawable.js';\r\n\r\nexport class Tile extends Drawable {\r\n  constructor(x, y, tileSize, color = '#686868') {\r\n    super(x, y, tileSize);\r\n    this.color = color;\r\n  }\r\n\r\n  draw(context) {\r\n    context.fillStyle = this.color;\r\n    context.fillRect(this.x * this.tileSize, this.y * this.tileSize, this.tileSize, this.tileSize);\r\n    context.strokeRect(this.x * this.tileSize, this.y * this.tileSize, this.tileSize, this.tileSize);\r\n  }\r\n}\r\n","import {EventEmitter, Injectable, Output} from '@angular/core';\r\nimport {Map} from '../model/map';\r\nimport {Drone} from '../model/drone';\r\nimport {HttpService} from '../../http.service';\r\nimport {DataService} from '../../data.service';\r\nimport {ImageLoader} from '../utils/imageloader';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DroneSimulatorService {\r\n  tileSize = 20;\r\n  selectedMap = 0;\r\n  selectedDrawable = 'waypoint';\r\n\r\n  canvas;\r\n  map;\r\n  drone;\r\n  simulationRunner;\r\n\r\n  loaded;\r\n  initialized;\r\n  eventListenersRegistered;\r\n\r\n  imageLoader;\r\n\r\n  maps;\r\n\r\n  mouseX;\r\n  mouseY;\r\n\r\n  @Output() alertEvent = new EventEmitter<string>();\r\n  @Output() onSimulatorLoadedEvent = new EventEmitter<boolean>();\r\n\r\n  constructor(private data: DataService, private http: HttpService) {\r\n    console.log('Starting simulator service...');\r\n    this.onSimulatorLoadedEvent.subscribe((loaded) => {\r\n        if (loaded) {\r\n          console.log('Simulator finished loading data.');\r\n          this.loaded = true;\r\n        }\r\n      }\r\n    );\r\n    this.imageLoader = new ImageLoader();\r\n    this.simulationRunner = undefined;\r\n  }\r\n\r\n  registerEventListeners() {\r\n    window.addEventListener('keydown', (event) => {\r\n      this.keyhandler(event);\r\n    });\r\n    window.addEventListener('mousedown', (event) => {\r\n      this.clickhandler(event);\r\n    });\r\n    window.addEventListener('mousemove', (event) => {\r\n      this.mousehandler(event);\r\n    });\r\n  }\r\n\r\n  keyhandler(e) {\r\n  }\r\n\r\n  clickhandler(e) {\r\n    const pos = this.mousePos(e);\r\n    if (pos.x >= 0 && pos.y >= 0 && pos.x <= this.canvas.width && pos.y <= this.canvas.height) {\r\n      const x = Math.floor(pos.x / this.tileSize);\r\n      const y = Math.floor(pos.y / this.tileSize);\r\n      if (this.selectedDrawable === 'waypoint') {\r\n        this.map.toggleWaypoint(x, y);\r\n      } else if (this.selectedDrawable === 'obstacle') {\r\n        this.map.toggleObstacle(x, y);\r\n      } else if (this.selectedDrawable === 'product') {\r\n        this.map.toggleProduct(x, y);\r\n      }\r\n    }\r\n    this.render();\r\n  }\r\n\r\n  mousehandler(e) {\r\n    const pos = this.mousePos(e);\r\n    if (pos.x >= 0 && pos.y >= 0 && pos.x <= this.canvas.width && pos.y <= this.canvas.height) {\r\n      this.mouseX = Math.floor(pos.x / this.tileSize);\r\n      this.mouseY = Math.floor(pos.y / this.tileSize);\r\n    }\r\n  }\r\n\r\n  mousePos(e) {\r\n    const rect = this.canvas.getBoundingClientRect();\r\n    return {\r\n      x: (e.clientX - rect.left) / (rect.right - rect.left) * this.canvas.width,\r\n      y: (e.clientY - rect.top) / (rect.bottom - rect.top) * this.canvas.height\r\n    };\r\n  }\r\n\r\n  reset() {\r\n    if (this.simulationRunner) {\r\n      window.clearInterval(this.simulationRunner);\r\n      this.simulationRunner = undefined;\r\n      this.alertEvent.emit('Simulation stopped.');\r\n    }\r\n    this.drone.reset();\r\n    this.map.reset();\r\n    this.map.loadMap(this.maps[this.selectedMap]);\r\n    this.render();\r\n  }\r\n\r\n  init() {\r\n    this.canvas = document.getElementById('simulator');\r\n    const gridSize = {width: this.canvas.width / this.tileSize, height: this.canvas.height / this.tileSize};\r\n    this.map = new Map(gridSize, this.tileSize, this.imageLoader);\r\n    this.drone = new Drone(1, 1, this.tileSize, gridSize, this.imageLoader);\r\n    this.map.loadMap(this.maps[this.selectedMap]);\r\n    if (!this.eventListenersRegistered) {\r\n      this.registerEventListeners();\r\n      this.eventListenersRegistered = true;\r\n    }\r\n    this.initialized = true;\r\n    this.render();\r\n  }\r\n\r\n  load() {\r\n    return new Promise((resolve, reject) => {\r\n      console.log('Loading simulator data...');\r\n      this.imageLoader.loadImages()\r\n        .then(() => {\r\n          this.http.getAllMaps()\r\n            .then(result => {\r\n              this.maps = result;\r\n              if (this.maps.length === 0) {\r\n                this.alertEvent.emit('No maps found in database, initializing new map...');\r\n                this.data.getNewMap()\r\n                  .then((res) => {\r\n                    this.http.addMap(res)\r\n                      .then(() => {\r\n                        this.alertEvent.emit('New map added.');\r\n                        this.http.getAllMaps()\r\n                          .then(newMaps => {\r\n                            this.maps = newMaps;\r\n                            resolve();\r\n                          })\r\n                          .catch(err => {\r\n                            console.log(err);\r\n                          });\r\n                      })\r\n                      .catch(error => {\r\n                        this.alertEvent.emit('Error adding new maps.');\r\n                        console.log(error);\r\n                      });\r\n                  })\r\n                  .catch(error => {\r\n                    this.alertEvent.emit('Error loading new map from JSON.');\r\n                    console.log(error);\r\n                  });\r\n              } else {\r\n                resolve();\r\n              }\r\n            })\r\n            .catch(error => {\r\n              this.alertEvent.emit('Error loading maps from database.');\r\n              console.log(error);\r\n              reject();\r\n            });\r\n        })\r\n        .catch(error => {\r\n          this.alertEvent.emit('Error loading images.');\r\n          console.log(error);\r\n          reject();\r\n        });\r\n    });\r\n  }\r\n\r\n  start() {\r\n    if (this.map.flightpath.optimalPath && this.simulationRunner === undefined) {\r\n      this.alertEvent.emit('Starting simulation...');\r\n      let currentWaypoint = 0;\r\n      this.simulationRunner = setInterval(() => {\r\n        if (currentWaypoint < this.map.flightpath.optimalPath.length) {\r\n          this.drone.moveTo(this.map.flightpath.optimalPath[currentWaypoint].x, this.map.flightpath.optimalPath[currentWaypoint].y);\r\n          this.render();\r\n          currentWaypoint++;\r\n        } else {\r\n          window.clearInterval(this.simulationRunner);\r\n          this.simulationRunner = undefined;\r\n          this.alertEvent.emit('Simulation finished.');\r\n        }\r\n      }, 100);\r\n    } else {\r\n      this.alertEvent.emit('No optimal flightpath calculated.');\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const context = this.canvas.getContext('2d');\r\n    this.map.draw(context);\r\n    this.drone.draw(context);\r\n  }\r\n\r\n  selectMap(id) {\r\n    this.selectedMap = id;\r\n    this.reset();\r\n  }\r\n\r\n  selectDrawable(drawable) {\r\n    this.selectedDrawable = drawable;\r\n  }\r\n\r\n  calculateOptimalFlightPath() {\r\n    const flightpath = this.map.flightpath.toJSON();\r\n    console.log('Sending waypoints to back-end:', flightpath);\r\n    this.updateMap().then(() => {\r\n      this.http.fetchOptimalFlightpath(flightpath).then((optimal) => {\r\n        console.log('Received optimal flightpath from server: ', optimal);\r\n        this.alertEvent.emit('Optimal flightplath successfully calculated.');\r\n        this.map.flightpath.setOptimalPath(optimal);\r\n        this.render();\r\n      });\r\n    })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n\r\n  }\r\n\r\n  duplicateMap() {\r\n    console.log('Exporting map...');\r\n    this.http.addMap(this.map.toJSON('Exported Map')).then(() => {\r\n      this.http.getAllMaps()\r\n        .then(result => {\r\n          this.maps = result;\r\n          this.selectedMap = this.maps.length - 1;\r\n        })\r\n        .catch(err => {\r\n          console.log(err);\r\n        });\r\n    });\r\n  }\r\n\r\n  updateMap() {\r\n    return new Promise(((resolve, reject) => {\r\n      this.http.updateMap(this.map.toJSON(this.map.name)).then(() => {\r\n        this.http.getAllMaps()\r\n          .then(result => {\r\n            this.maps = result;\r\n            resolve();\r\n          })\r\n          .catch(err => {\r\n            reject(err);\r\n          });\r\n      });\r\n    }));\r\n\r\n  }\r\n}\r\n","export class ImageLoader {\r\n\r\n  constructor() {\r\n    this.images = ['drone', 'box', 'landing', 'takeoff'];\r\n    this.loadedImages = {};\r\n  }\r\n\r\n  loadImages() {\r\n    return new Promise((resolve, reject) => {\r\n      let imagePromises = this.images.map((filename) => {\r\n        return new Promise((resolve, reject) => {\r\n          let img = new Image();\r\n          img.src = 'assets/images/simulator/' + filename + '.png';\r\n          img.addEventListener('load', () => {\r\n            this.loadedImages[filename] = img;\r\n            resolve(filename, img);\r\n          });\r\n          img.addEventListener('error', (error) => {\r\n            reject(error);\r\n          });\r\n        });\r\n      });\r\n      Promise.all(imagePromises).then(() => {\r\n        resolve();\r\n      });\r\n    });\r\n  }\r\n}\r\n","module.exports = \"#canvas {\\r\\n  border: 3px solid black;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZHJvbmUtc2ltdWxhdG9yL3ZpZXcvZHJvbmUtc2ltdWxhdG9yLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSx1QkFBdUI7QUFDekIiLCJmaWxlIjoic3JjL2FwcC9kcm9uZS1zaW11bGF0b3Ivdmlldy9kcm9uZS1zaW11bGF0b3IuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIiNjYW52YXMge1xyXG4gIGJvcmRlcjogM3B4IHNvbGlkIGJsYWNrO1xyXG59XHJcbiJdfQ== */\"","module.exports = \"<h2>Drone Simulator</h2>\\r\\n<hr>\\r\\n<div>\\r\\n  <div *ngIf=\\\"simulator.initialized\\\" class=\\\"btn-toolbar mb-2 mb-md-2\\\" >\\r\\n    <div class=\\\"btn-group mr-2\\\">\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-sm btn-outline-secondary\\\" (click)=\\\"simulator.calculateOptimalFlightPath()\\\">\\r\\n        <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"24\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\" fill=\\\"none\\\"\\r\\n             stroke=\\\"currentColor\\\" stroke-width=\\\"2\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\"\\r\\n             class=\\\"feather feather-loader\\\">\\r\\n          <line x1=\\\"12\\\" y1=\\\"2\\\" x2=\\\"12\\\" y2=\\\"6\\\"></line>\\r\\n          <line x1=\\\"12\\\" y1=\\\"18\\\" x2=\\\"12\\\" y2=\\\"22\\\"></line>\\r\\n          <line x1=\\\"4.93\\\" y1=\\\"4.93\\\" x2=\\\"7.76\\\" y2=\\\"7.76\\\"></line>\\r\\n          <line x1=\\\"16.24\\\" y1=\\\"16.24\\\" x2=\\\"19.07\\\" y2=\\\"19.07\\\"></line>\\r\\n          <line x1=\\\"2\\\" y1=\\\"12\\\" x2=\\\"6\\\" y2=\\\"12\\\"></line>\\r\\n          <line x1=\\\"18\\\" y1=\\\"12\\\" x2=\\\"22\\\" y2=\\\"12\\\"></line>\\r\\n          <line x1=\\\"4.93\\\" y1=\\\"19.07\\\" x2=\\\"7.76\\\" y2=\\\"16.24\\\"></line>\\r\\n          <line x1=\\\"16.24\\\" y1=\\\"7.76\\\" x2=\\\"19.07\\\" y2=\\\"4.93\\\"></line>\\r\\n        </svg>\\r\\n        Calculate Optimal Flightpath\\r\\n      </button>\\r\\n    </div>\\r\\n    <div class=\\\"btn-group mr-2\\\">\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-sm btn-outline-secondary\\\" (click)=\\\"simulator.start()\\\" [disabled]=\\\"simulator.map.flightpath.optimalPath.length === 0\\\">\\r\\n        <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"24\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\" fill=\\\"none\\\"\\r\\n             stroke=\\\"currentColor\\\" stroke-width=\\\"2\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\"\\r\\n             class=\\\"feather feather-play\\\">\\r\\n          <polygon points=\\\"5 3 19 12 5 21 5 3\\\"></polygon>\\r\\n        </svg>\\r\\n        Fly Drone\\r\\n      </button>\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-sm btn-outline-secondary\\\" (click)=\\\"simulator.reset(); this.alerts = [];\\\">\\r\\n        <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"24\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\" fill=\\\"none\\\"\\r\\n             stroke=\\\"currentColor\\\" stroke-width=\\\"2\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\"\\r\\n             class=\\\"feather feather-x\\\">\\r\\n          <line x1=\\\"18\\\" y1=\\\"6\\\" x2=\\\"6\\\" y2=\\\"18\\\"/>\\r\\n          <line x1=\\\"6\\\" y1=\\\"6\\\" x2=\\\"18\\\" y2=\\\"18\\\"/>\\r\\n        </svg>\\r\\n        Reset\\r\\n      </button>\\r\\n    </div>\\r\\n    <div class=\\\"btn-group\\\" ngbDropdown role=\\\"group\\\" aria-label=\\\"map-selection\\\" placement=\\\"bottom-right\\\">\\r\\n      <button *ngIf=\\\"simulator.loaded\\\" type=\\\"button\\\" class=\\\"btn btn-sm btn-outline-secondary dropdown-toggle\\\" ngbDropdownToggle>\\r\\n        <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"24\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\" fill=\\\"none\\\"\\r\\n             stroke=\\\"currentColor\\\" stroke-width=\\\"2\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\"\\r\\n             class=\\\"feather feather-map\\\">\\r\\n          <polygon points=\\\"1 6 1 22 8 18 16 22 23 18 23 2 16 6 8 2 1 6\\\"/>\\r\\n          <line x1=\\\"8\\\" y1=\\\"2\\\" x2=\\\"8\\\" y2=\\\"18\\\"/>\\r\\n          <line x1=\\\"16\\\" y1=\\\"6\\\" x2=\\\"16\\\" y2=\\\"22\\\"/>\\r\\n        </svg>\\r\\n        {{simulator.maps[simulator.selectedMap].name}} - #{{simulator.maps[simulator.selectedMap]._id}}\\r\\n      </button>\\r\\n      <div class=\\\"dropdown-menu\\\" ngbDropdownMenu>\\r\\n        <button *ngFor=\\\"let map of simulator.maps; index as i\\\" class=\\\"dropdown-item\\\" (click)=\\\"simulator.selectMap(i)\\\">\\r\\n          {{map.name}} - #{{map._id}}\\r\\n        </button>\\r\\n      </div>\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-sm btn-outline-secondary\\\" (click)=\\\"simulator.updateMap()\\\">\\r\\n        <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"24\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\" fill=\\\"none\\\" stroke=\\\"currentColor\\\" stroke-width=\\\"2\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" class=\\\"feather feather-save\\\"><path d=\\\"M19 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h11l5 5v11a2 2 0 0 1-2 2z\\\"></path><polyline points=\\\"17 21 17 13 7 13 7 21\\\"></polyline><polyline points=\\\"7 3 7 8 15 8\\\"></polyline></svg>\\r\\n        Save\\r\\n      </button>\\r\\n    </div>\\r\\n\\r\\n\\r\\n  </div>\\r\\n  <canvas id=\\\"simulator\\\" width=\\\"800\\\" height=\\\"600\\\"></canvas>\\r\\n  <p>\\r\\n    mouseX: {{simulator.mouseX}}, mouseY: {{simulator.mouseY}}\\r\\n  </p>\\r\\n</div>\\r\\n\\r\\n<p *ngFor=\\\"let alert of alerts\\\">\\r\\n  <ngb-alert [type]=\\\"alert.type\\\" (close)=\\\"close(alert)\\\">{{ alert.message }}</ngb-alert>\\r\\n</p>\\r\\n\\r\\n\\r\\n\"","import {Component, OnInit} from '@angular/core';\r\n\r\nimport {DroneSimulatorService} from '../presenter/drone-simulator.service';\r\n\r\n@Component({\r\n  selector: 'app-drone-simulator',\r\n  templateUrl: './drone-simulator.component.html',\r\n  styleUrls: ['./drone-simulator.component.css']\r\n})\r\nexport class DroneSimulatorComponent implements OnInit {\r\n\r\n  alerts = [];\r\n\r\n  constructor(private simulator: DroneSimulatorService) {\r\n    let i = 0;\r\n    simulator.alertEvent.subscribe(\r\n      (alertMessage) => {\r\n        this.alerts.push({\r\n          id: i++,\r\n          type: 'warning',\r\n          message: alertMessage\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  close(alert) {\r\n    for (let i = this.alerts.length - 1; i >= 0; i--) {\r\n      if (this.alerts[i].id === alert.id) {\r\n        this.alerts.splice(i, 1);\r\n      }\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.simulator.initialized = false;\r\n    if (this.simulator.loaded) {\r\n      this.simulator.init();\r\n    } else {\r\n      this.simulator.onSimulatorLoadedEvent.subscribe((loaded) => {\r\n        if (loaded) {\r\n          this.simulator.init();\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2ZsaWdodC1wbGFubmVyL2ZsaWdodC1wbGFubmVyLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom\\\">\\r\\n  <h1 class=\\\"h1\\\">Flight Planner</h1>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { SharedService } from '../shared.service';\r\n\r\n@Component({\r\n  selector: 'app-flight-planner',\r\n  templateUrl: './flight-planner.component.html',\r\n  styleUrls: ['./flight-planner.component.css']\r\n})\r\nexport class FlightPlannerComponent implements OnInit {\r\n\r\n  constructor(private sharedService: SharedService) {\r\n    sharedService.onNavigateEvent.emit('flight-planner');\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient, HttpErrorResponse} from '@angular/common/http';\r\nimport {environment} from '../environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class HttpService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  getAllMaps() {\r\n    return new Promise((resolve, reject) => {\r\n      this.http.get(environment.baseAPIUrl + 'api/maps').subscribe(\r\n        result => {\r\n          resolve(result);\r\n        },\r\n        (error: HttpErrorResponse) => {\r\n          reject(error);\r\n        }\r\n      );\r\n    });\r\n  }\r\n\r\n  getMap(mapId) {\r\n    return new Promise((resolve, reject) => {\r\n      this.http.get(environment.baseAPIUrl + 'api/maps/' + mapId).subscribe(\r\n        result => {\r\n          resolve(result);\r\n        },\r\n        (error: HttpErrorResponse) => {\r\n          reject(error);\r\n        }\r\n      );\r\n    });\r\n  }\r\n\r\n  addMap(map) {\r\n    return new Promise((resolve, reject) => {\r\n      this.http.post(environment.baseAPIUrl + 'api/maps/', map).subscribe(\r\n        result => {\r\n          resolve(result);\r\n        },\r\n        (error: HttpErrorResponse) => {\r\n          reject(error);\r\n        }\r\n      );\r\n    });\r\n  }\r\n\r\n  updateMap(map) {\r\n    return new Promise((resolve, reject) => {\r\n      console.log(map);\r\n      this.http.put(environment.baseAPIUrl + 'api/maps/' + map._id, map).subscribe(\r\n        result => {\r\n          resolve(result);\r\n        },\r\n        (error: HttpErrorResponse) => {\r\n          reject(error);\r\n        }\r\n      );\r\n    });\r\n  }\r\n\r\n  fetchOptimalFlightpath(flightpath) {\r\n    return new Promise((resolve, reject) => {\r\n      this.http.post(environment.baseAPIUrl + 'api/flightpath/', flightpath).subscribe(\r\n        result => {\r\n          resolve(result);\r\n        },\r\n        (error: HttpErrorResponse) => {\r\n          reject(error);\r\n        }\r\n      );\r\n    });\r\n  }\r\n\r\n  getAllProducts(mapId) {\r\n    return new Promise((resolve, reject) => {\r\n      this.http.get(environment.baseAPIUrl + 'api/maps/' + mapId + '/products/').subscribe(\r\n        result => {\r\n          resolve(result);\r\n        },\r\n        (error: HttpErrorResponse) => {\r\n          reject(error);\r\n        }\r\n      );\r\n    });\r\n  }\r\n\r\n  deleteProduct(mapId, productId) {\r\n    return new Promise((resolve, reject) => {\r\n      this.http.delete(environment.baseAPIUrl + 'api/maps/' + mapId + '/products/' + productId).subscribe(\r\n        result => {\r\n          resolve(result);\r\n        },\r\n        (error: HttpErrorResponse) => {\r\n          reject(error);\r\n        }\r\n      );\r\n    });\r\n  }\r\n\r\n  addProduct(mapId, product) {\r\n    return new Promise((resolve, reject) => {\r\n      this.http.post(environment.baseAPIUrl + 'api/maps/' + mapId + '/products/', product).subscribe(\r\n        result => {\r\n          resolve(result);\r\n        },\r\n        (error: HttpErrorResponse) => {\r\n          reject(error);\r\n        }\r\n      );\r\n    });\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2ludmVudG9yeS9pbnZlbnRvcnkuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom\\\">\\r\\n  <h1>Inventory</h1>\\r\\n</div>\\r\\n<div *ngIf=\\\"simulator.loaded\\\">\\r\\n  <h2>Add products</h2>\\r\\n  <form #productForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(productForm.form);\\\">\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"name\\\">Name</label>\\r\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"name\\\" name=\\\"name\\\" #nameField=\\\"ngModel\\\" ngModel required>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"quantity\\\">Quantity</label>\\r\\n      <input id=\\\"quantity\\\" type=\\\"number\\\" min=\\\"0\\\" class=\\\"form-control\\\" name=\\\"quantity\\\" #quantityField=\\\"ngModel\\\" ngModel required>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"x\\\">X</label>\\r\\n      <input id=\\\"x\\\" type=\\\"number\\\" min=\\\"0\\\" class=\\\"form-control\\\" name=\\\"x\\\" #xField=\\\"ngModel\\\" ngModel required>\\r\\n      <label for=\\\"y\\\">Y</label>\\r\\n      <input id=\\\"y\\\" type=\\\"number\\\" min=\\\"0\\\" class=\\\"form-control\\\" name=\\\"y\\\" #yField=\\\"ngModel\\\" ngModel required>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"mapId\\\">MapId</label>\\r\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"mapId\\\" name=\\\"mapId\\\" #mapField=\\\"ngModel\\\" ngModel [(ngModel)]=\\\"simulator.maps[simulator.selectedMap]._id\\\" required readonly>\\r\\n    </div>\\r\\n    <div style=\\\"text-align:right; width:100%; padding:0;\\\">\\r\\n      <button class=\\\"btn btn-success\\\" type=\\\"submit\\\">Submit</button>\\r\\n    </div>\\r\\n  </form>\\r\\n  <hr>\\r\\n  <div>\\r\\n    <h2>Products in {{simulator.maps[simulator.selectedMap].name}}</h2>\\r\\n    <table class=\\\"table table-striped\\\">\\r\\n      <thead>\\r\\n      <tr>\\r\\n        <th scope=\\\"col\\\">#</th>\\r\\n        <th scope=\\\"col\\\">Name</th>\\r\\n        <th scope=\\\"col\\\">Quantity</th>\\r\\n        <th scope=\\\"col\\\">X</th>\\r\\n        <th scope=\\\"col\\\">Y</th>\\r\\n        <th scope=\\\"col\\\"></th>\\r\\n      </tr>\\r\\n      </thead>\\r\\n      <tbody>\\r\\n      <tr *ngFor=\\\"let product of products; index as i\\\">\\r\\n        <th scope=\\\"row\\\">{{ i + 1 }}</th>\\r\\n        <td>{{product.name}}</td>\\r\\n        <td>{{product.quantity}}</td>\\r\\n        <td>{{product.position.x}}</td>\\r\\n        <td>{{product.position.y}}</td>\\r\\n        <td>\\r\\n          <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"deleteProduct(product._id)\\\">X</button>\\r\\n        </td>\\r\\n      </tr>\\r\\n      </tbody>\\r\\n    </table>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import {Component, OnInit} from '@angular/core';\r\nimport {SharedService} from '../shared.service';\r\nimport {HttpService} from '../http.service';\r\nimport {DroneSimulatorService} from '../drone-simulator/presenter/drone-simulator.service';\r\n\r\n@Component({\r\n  selector: 'app-inventory',\r\n  templateUrl: './inventory.component.html',\r\n  styleUrls: ['./inventory.component.css']\r\n})\r\nexport class InventoryComponent implements OnInit {\r\n\r\n  products;\r\n\r\n  constructor(private sharedService: SharedService, private http: HttpService, private simulator: DroneSimulatorService) {\r\n    sharedService.onNavigateEvent.emit('inventory');\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (this.simulator.loaded) {\r\n      this.loadProducts();\r\n    } else {\r\n      this.simulator.onSimulatorLoadedEvent.subscribe((loaded) => {\r\n        if (loaded) {\r\n          this.loadProducts();\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  loadProducts() {\r\n    return new Promise((resolve, reject) => {\r\n      const mapId = this.simulator.maps[this.simulator.selectedMap]._id;\r\n      this.http.getAllProducts(mapId)\r\n        .then((res) => {\r\n          this.products = res;\r\n          resolve();\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          reject(err);\r\n        });\r\n    });\r\n  }\r\n\r\n  deleteProduct(productId) {\r\n    const mapId = this.simulator.maps[this.simulator.selectedMap]._id;\r\n    this.http.deleteProduct(mapId, productId)\r\n      .then((res) => {\r\n        this.loadProducts()\r\n          .then(() => {\r\n            this.http.getAllMaps()\r\n              .then(result => {\r\n                this.simulator.maps = result;\r\n              })\r\n              .catch(err => {\r\n                console.log(err);\r\n              });\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n          });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  onSubmit(form) {\r\n    const mapId = this.simulator.maps[this.simulator.selectedMap]._id;\r\n    const mapData = form.value;\r\n    mapData.position = {x: form.value.x, y: form.value.y};\r\n    this.http.addProduct(mapId, mapData)\r\n      .then((res) => {\r\n        this.loadProducts()\r\n          .then(() => {\r\n            this.http.getAllMaps()\r\n              .then(result => {\r\n                this.simulator.maps = result;\r\n              })\r\n              .catch(err => {\r\n                console.log(err);\r\n              });\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n          });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21hcC1lZGl0b3IvbWFwLWVkaXRvci5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom\\\">\\r\\n  <h1>Map Editor</h1>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { SharedService } from '../shared.service';\r\n\r\n@Component({\r\n  selector: 'app-map-editor',\r\n  templateUrl: './map-editor.component.html',\r\n  styleUrls: ['./map-editor.component.css']\r\n})\r\nexport class MapEditorComponent implements OnInit {\r\n\r\n  constructor(private sharedService: SharedService) {\r\n    sharedService.onNavigateEvent.emit('map-editor');\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import {EventEmitter, Injectable, Output} from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SharedService {\r\n  @Output() onNavigateEvent = new EventEmitter<string>();\r\n\r\n  constructor() {\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  baseAPIUrl: 'http://localhost:3000/'\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":""}